{
    "env": {
      "browser": true,
      "es2021": true
    },
    "extends": [
      "eslint:recommended",
      "plugin:react/recommended"
    ],
    "parserOptions": {
      "ecmaVersion": 12,
      "sourceType": "module"
    },
    "plugins": [
      "react"
    ],
    "rules": {
  // Possible errors
  "no-console": "warn",                  // Warns about console.log statements
  "no-debugger": "warn",                // Warns about debugger statements

  // Best practices
  "eqeqeq": "error",                   // Enforce the use of === and !==
  "curly": ["error", "all"],           // Enforce consistent use of curly braces
  "no-unused-vars": ["error", { "argsIgnorePattern": "^_" }], // Prevent unused variables, except those starting with _
  "no-undef": "error",                 // Disallow the use of undeclared variables
  "no-magic-numbers": ["warn", { "ignore": [0, 1] }], // Disallow magic numbers, except 0 and 1

  // React-specific rules
  "react/prop-types": "off",           // Disable prop-types rule if you're using TypeScript or prefer to use defaultProps
  "react/react-in-jsx-scope": "error", // Ensure React is in scope when using JSX
  "react/jsx-uses-react": "error",     // Prevent React being marked as unused when it is used in JSX
  "react/jsx-uses-vars": "error",      // Prevent variables used in JSX being marked as unused
  "react/jsx-indent": ["error", 2],    // Enforce consistent JSX indentation (2 spaces)
  "react/jsx-no-duplicate-props": ["error", { "ignoreCase": true }], // Disallow duplicate props in JSX
  "react/jsx-one-expression-per-line": "off", // Disable rule enforcing only one JSX expression per line

  // Formatting
  "indent": ["error", 2],              // Enforce consistent indentation (2 spaces)
  "quotes": ["error", "single"],       // Enforce the use of single quotes
  "semi": ["error", "always"],         // Enforce the use of semicolons
  "linebreak-style": ["error", "unix"],// Enforce Unix linebreak style (LF)
  "max-len": ["warn", { "code": 80 }], // Enforce a maximum line length (80 characters)
}
  }
  